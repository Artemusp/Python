# Python
from tkinter import *
from random import *
from math import *
#constants 
WIDTH = 640
HEIGHT = 480
BG_COLOR = 'white'
ZERO = 0
MAIN_BALL_RADIUS = 30
MAIN_BALL_COLOR = 'blue'
INIT_DX = 1
INIT_DY = 1
BAD_COLOR = 'red'
COLORS = ['red','black','pink','yellow','gold','red','red']

# balls class
class Balls():
    def __init__(self,x,y,r,color,dx=0,dy=0):#конструктор
        self.x = x
        self.y = y
        self.color = color
        self.r = r
        self.dx = dx
        self.dy = dy
    def draw(self):
        canvas.create_oval(self.x - self.r,self.y - self.r,self.x+self.r,self.y+self.r,fill=self.color,outline = self.color if self.color != BAD_COLOR else 'black')
        
    def hide(self):#скрыть последний шарик
        canvas.create_oval(self.x - self.r,self.y - self.r,self.x+self.r,self.y+self.r,fill=BG_COLOR,outline = BG_COLOR)
    
    def is_collision(self, balls):
        a = abs(self.x + self.dx - ball.x)
        b = abs(self.y + self.dy - ball.y)
        return sqrt(a*a + b*b) <= self.r + ball.r
    def move(self):
        #colliding with walls
        if (self.x + self.r + self.dx >= WIDTH or self.x - self.r + self.dx <= ZERO):
            self.dx = -self.dx
        if (self.y + self.r + self.dy >= HEIGHT or self.y - self.r + self.dy <= ZERO):
            self.dy = -self.dy   
        #colliding with balls
        global ball
        for ball in balls:
            if self.is_collision(ball):
                if (ball.color != BAD_COLOR):
                    
                    ball.hide()
                    balls.remove(ball)
                    self.dx = - self.dx
                    self.dy = - self.dy
                else:
                    self.dx=self.dy=0 #остановить наш шар если он столкнулся с красным
        self.hide()
        self.x += self.dx
        self.y += self.dy
        self.draw()
    


# mouse events
def mouse_click(event):
    global main_ball
    #main_ball.hide()
    #print(event.num,event.x, event.y)#номер мышки и координаты тыка мыши    
    if event.num == 1:
        if ('main_ball' not in globals()):
            
            main_ball = Balls(event.x,event.y, MAIN_BALL_RADIUS,MAIN_BALL_COLOR,INIT_DX,INIT_DY)
            main_ball.draw()
           
        else:# turn left in move
            if main_ball.dx * main_ball.dy > 0:
                main_ball.dy = - main_ball.dy
            else:
                main_ball.dx = - main_ball.dx
            
    elif event.num == 3: #turn right
        if main_ball.dx * main_ball.dy > 0:
            main_ball.dx = - main_ball.dx
        else:
            main_ball.dy = - main_ball.dy            



#create list of balls
def create_list_of_balls(number):
    lst = []
    for j in range(number):
        next_ball = Balls(choice(range(0,WIDTH)), choice(range(0,HEIGHT)), choice(range(15,35)),choice(COLORS))
        lst.append(next_ball)
        next_ball.draw()
    return lst
    
    
# main circle game
def main():
    if 'main_ball' in globals():
        main_ball.move()
        if not balls:#остановка игры рисуем надпись победы!, font = размер шрифта
            canvas.create_text(WIDTH/2, HEIGHT/2 ,text = 'you win!', font = "Arial 20", fill = MAIN_BALL_COLOR)
            main_ball.dx = main.ball.dy = 0 #остановка шарика
    root.after(5,main)

     
root = Tk()
root.title('Balls')
canvas = Canvas(root,width = WIDTH,height = HEIGHT,bg = BG_COLOR)
canvas.pack()
canvas.bind('<Button-1>', mouse_click)#левая кнопка мыши
canvas.bind('<Button-2>', mouse_click,'+')#колесо кнопка мыши
canvas.bind('<Button-3>', mouse_click,'+')#правая кнопка мыши
if 'main_ball' in globals():
    del main_ball
balls = create_list_of_balls(20)
main()
root.mainloop()

